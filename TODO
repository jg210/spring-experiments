* Node.js 16 actions are deprecated. Please update the following actions to use Node.js 20: actions/checkout@v3, actions/setup-java@v3, gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25. For more information see: https://github.blog/changelog/2023-09-22-github-actions-transitioning-from-node-16-to-node-20/.

* Try out redux-toolkit.

* Retries with exponential backoff for failed requests (e.g. from 429 from lambda rate limiting).

* Cache npm files on github actions.

* Enable branch protection rule for master.

* Split gradle checks into multiple github actions steps?

* Should be able to use shadowJar in place of bootJar
  - shadowJar is lacking most manifest attributes so isn't executable.

* A release branch, so can fix problems without breaking aws-experiments deployment?
  - or single branch and versioned publishing

* Client-side crash reporting.

* Server-side crash reporting.

* Add package javadoc explaining purpose of Fsa* and api classes.

* More method/class javadoc.

* Test FsaService json parsing using file:/// URLs.

* Add VSC launch configs for npm install and npm start.
  - add npm start config to spring-experiments.code-workspace compound launch config.

* Nullable/NonNull annotations.

* Role better than access key for publishing?
  - https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html?icmpid=docs_iam_console#Using_CreateAccessKey

* Add favicon.ico.

* gradle bootRun task depends on react/npm tasks even though doesn't use their output.

* Some TODO comments live in aws-experiments repo.

* Add /fsa context path to paths.
  - redirect using nginx if use empty path.

* Rename project.
  - its not just spring any more.

* Configure https.
  - nginx
  - firewall
  - GA "property" is configured with "http".
  - link(s) in github repo.
  - https certificate
    - AWS certificates are free, but only work with load balancers etc., which aren't free
    - let's encrypt + certbot on EC2
      - but would need own DNS record
      - certificates are listed publicly
        - github site will be public too though
  - http redirection
    - https://letsencrypt.org/docs/allow-port-80/

* Use https://fb.me/react-error-boundaries to mask back traces.

* Improved failed-connection handling.

* Verify json metadata in case get paged data.
  - check meta.totalPages is 1.
  - check meta.returncode is OK.
  - check meta.totalCount is correct.

* Always download data using paged APIs.

* Find way to automate npm audit
  - currently have unfixed errors in dependencies of latest react-scripts
  - only fail if errors are above low priority?
    - there's no option for that
  - there are wrapper projects for npm audit.
  - can travis CI do warnings?

* Local Authority could be removed while app running.
  - but a query for an unknown authority returns empty list.

* Improve visual design.

* Localization.

* jest snapshot tests.

* Automated browser tests.

* Actuator logging?
  - https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html
  - authentication or endpoints.trace.sensitive=false in debug only (or block with nginx)

* RestTemplate will be deprecated and asks that you use reactive WebClient instead.

* Make FsaService into interface, so can mock it without having to make methods/class non-final.

* Lint for github actions config.
