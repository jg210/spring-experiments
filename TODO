* Send unexpected HTTP response codes to sentry.
  - before or after retries?
  - how?
    - via wrapper for hook?
    - https://redux-toolkit.js.org/rtk-query/usage/error-handling#handling-errors-at-a-macro-level

* onRetrievalDateTripleClick export prevents vite fast refresh.
  - hmr invalidate /src/Table.tsx Could not Fast Refresh.
  - Learn more at https://github.com/vitejs/vite-plugin-react/tree/main/packages/plugin-react#consistent-components-exports

* Unit test Table stays in loading... state if only one of Ratings or Establishments loads.
  - a reliable test would have to wait for the one mock network request that is made

* Sentry-github integration
  - https://docs.sentry.io/product/integrations/source-code-mgmt/github/

* https://docs.sentry.io/platforms/javascript/guides/react/features/redux/

* https://docs.sentry.io/platforms/javascript/guides/react/features/component-tracking/ breaks app...

* Assert correct id selected in list in App.test.tsx.
  - https://cathalmacdonnacha.com/how-to-test-a-select-element-with-react-testing-library

* Use redux for App's localAuthorityId
  - https://redux-toolkit.js.org/usage/usage-with-typescript

* Split sentry production environment in two
  - aws.jeremygreen.me.uk/ and spring-experiments.jeremygren.me.uk

* https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps
  - https://redux-toolkit.js.org/rtk-query/usage/persistence-and-rehydration

* JVM-level monitoring
  - https://reflectoring.io/spring-aws-cloudwatch/
    - micrometer
    - AWS SDK
      - CloudWatchAsyncClient     
    - https://dkublik.github.io/2018/08/26/springboot-metrics-with-micrometer-and-aws-cloudwatch.html
    - make sure actuator binds to localhost (or nothing).

* More Java static analysis?
  X Spotbugs.
  - PMD?
  - infer?
  - http://errorprone.info/?

* Export OpenAPI spec. from spring boot server and use it in front end
  - generate RTK Query API
  - can MSW mocks be typed automatically too?

* useTranstion and Suspense for loading state?
  - Suspense not supported by RTK Query yet
    - https://github.com/reduxjs/redux-toolkit/issues/1574
  - "useDeferredValue does not by itself prevent extra network requests."
  - https://react.dev/reference/react/useDeferredValue#how-is-deferring-a-value-different-from-debouncing-and-throttling

* More cypress tests.

* Check in VS Code recommended plugins.

* Analytics.

* Client-side crash reporting.

* Bug report for use-debounce isPending().
  - https://github.com/xnimorz/use-debounce
  - https://github.com/jg210/spring-experiments/pull/41/commits/ab055f1dbdfa7a9b00c04c1d01cb7b153121bf7f was my workaround.

* Reduce RTK Query retry interval in unit tests?

* Check for carets in package.json in unit tests.

* Add pip constraints file.

* 0% rows generally have non-zero bar graph size
  - from rounding
  - show count in html title tooltip or extra column?

* Cache npm files on github actions.

* Cache apt-get files on github actions.
  - initial attempt broke graphviz: aa8823d1d8ea6ec066fdd28232febc3f90d79318

* Enable branch protection rule for master.

* Automated licence management.

* Prefetch data when scrolling through list.
  - ideas from https://github.com/reduxjs/redux-toolkit/discussions/3174 might be relevant?

* Pre-load ratings list.

* Split github action job into multiple jobs.

* Should be able to use shadowJar in place of bootJar.

* A release branch, so can fix problems without breaking aws-experiments deployment?
  - or single branch and versioned publishing

* Sentry for spring-boot server
  - dev/sentry_for_server
  - memory use likely a problem
    - https://github.com/getsentry/sentry-java/issues/3182
  - set DSN
    - https://docs.sentry.io/platforms/java/guides/spring-boot/configuration/
  - does something need to call Sentry.init()?
  - set environment
  - make sure release id is same as for front end
  - source code?
  - are events reliably sent from lambdas?
  - make sure ec2 and lambda can be distinguised.

* Add package javadoc explaining purpose of Fsa* and api classes.

* More method/class javadoc.

* RenderWithStore component would be better as a function.
  - less verbose
  - could return extra objects, e.g. the store.

* Test FsaService json parsing using file:/// URLs.

* Unit tests for lambda (in addition to cypress end-to-end tests).
  - https://github.com/aws/aws-lambda-java-libs/tree/main/aws-lambda-java-tests
    - doesn't have API gateway support?
  - https://github.com/brefphp/local-api-gateway

* Add VSC launch configs for npm install and npm start.
  - add npm start config to spring-experiments.code-workspace compound launch config.

* Nullable/NonNull annotations.

* Role better than access key for publishing?
  - https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html?icmpid=docs_iam_console#Using_CreateAccessKey

* Automated testing of sentry configuration
  - front end
  - server

* Polling of APIs could mean that a localAuthorityId disappears.
  - with much much greater probability than is currently possible.
  - but still not very likely

* Add favicon.ico.

* gradle bootRun task depends on react/npm tasks even though doesn't use their output.

* Some TODO comments live in aws-experiments repo.

* Add /fsa context path to paths.
  - redirect using nginx if use empty path.

* Rename project.
  - it's not just spring any more.

* Configure https.
  - nginx
  - firewall
  - GA "property" is configured with "http".
  - link(s) in github repo.
  - https certificate
    - AWS certificates are free, but only work with load balancers etc., which aren't free
    - let's encrypt + certbot on EC2
      - but would need own DNS record
      - certificates are listed publicly
        - github site will be public too though
  - http redirection
    - https://letsencrypt.org/docs/allow-port-80/

* Use https://fb.me/react-error-boundaries to mask back traces.

* unit test cache expiry and polling
  - might need to reduce below polling interval to make this possible?
  - https://mswjs.io/docs/recipes/polling/
  - not clear if MSW etc. work with useFakeTimers() - 8e7785d889323f7cdd464bfac074466d3d487ff3
  - polling iff brwoser window focused.

* "Pass and Eat Safe" appears in Establishments but not Ratings
  - a "feature" of the data provided by FSA API

* unit test changing Table localAuthorityId shows loading... state again 

* unit test for debouncing
  - no debouncing if data cached
  - debouncing if it's not cached.

* Error message if run out of retries.
  - or infinite retries and a network connectivity warning?

* Verify json metadata in case get paged data.
  - check meta.totalPages is 1.
  - check meta.returncode is OK.
  - check meta.totalCount is correct.

* Always download data using paged APIs.

* Dependabot?  

* Local Authority could be removed while app running.
  - but a query for an unknown authority returns empty list.

* Improve visual design.

* Localization.

* Only set js-profiling header for paths that really need it.
  - in JsProfilingFilter
  - matching vite.config.ts is good too

* snapshot tests.

* Actuator logging?
  - https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html
  - authentication or endpoints.trace.sensitive=false in debug only (or block with nginx)

* RestTemplate will be deprecated and asks that you use reactive WebClient instead.

* Make FsaService into interface, so can mock it without having to make methods/class non-final.

* Lint for github actions config.

* Is there a GitHub Actions vitest clover action?

* Better looking sentry ErrorFallback component.
