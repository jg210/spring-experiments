name: checks

on: push

jobs:
  build:
    runs-on: ubuntu-20.04
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4.1.1
    
    - name: JDK
      uses: actions/setup-java@v4.0.0
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    
    - uses: actions/setup-node@v4.0.1
      with:
        node-version-file: '.node-version'

    - uses: actions/setup-python@v5.0.0
      with:
        cache: 'pip'

    - name: setup gradle
      uses: gradle/actions/setup-gradle@v3

    - name: local bin/setup script
      run: ./bin/setup

    - name: assemble
      run: ./gradlew --scan assemble

    # Store as artifacts for debugging.
    - name: archive jars
      uses: actions/upload-artifact@v4.3.0
      with:
        name: jars
        path: |
          build/libs/*.jar
    
    - name: check
      run: ./gradlew --scan check

    - name: cypress end-to-end tests - spring boot jar
      run: |
        . environment
        java -jar build/libs/spring-experiments-1.0.jar &
        trap "kill $!" EXIT
        wait-on -t 60s http://localhost:8080
        TERM=linux cypress run --config baseUrl=http://localhost:8080 --project src/frontend

    - name: cypress end-to-end tests - sam local start-api
      run: |
        . environment
        logFile="${RUNNER_TEMP}/sam_logs.txt"
        echo "starting server, logging to: ${logFile}"
        sam local start-api --warm-containers EAGER --debug > "${logFile}" 2>&1 &
        trap "kill $!" EXIT
        wait-on -t 60s http://localhost:3000
        TERM=linux cypress run --config baseUrl=http://localhost:3000 --project src/frontend

    - name: archive sam local start-api logs
      uses: actions/upload-artifact@v4.3.0
      if: success() || failure()
      with:
        name: sam_logs.txt
        path: ${{ runner.temp }}/sam_logs.txt

    # Publish to S3 for deployment
    - name: publish
      if: ${{ github.ref == 'refs/heads/master' }}
      run: ./gradlew --scan publish
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
