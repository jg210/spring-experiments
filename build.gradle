buildscript {
    configurations.classpath {
        resolutionStrategy.activateDependencyLocking()
    }
}

plugins {
    // https://plugins.gradle.org/plugin/org.springframework.boot
    id 'org.springframework.boot' version "${SPRING_BOOT_VERSION}"
    // https://plugins.gradle.org/plugin/io.spring.dependency-management
    id 'io.spring.dependency-management' version '1.1.4'
    id 'maven-publish'
    id 'java'
}

group = 'uk.me.jeremygreen'
version = '1.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:${SPRING_BOOT_VERSION}"
    implementation "com.amazonaws.serverless:aws-serverless-java-container-spring:1.3.2"
    runtimeOnly "org.springframework.boot:spring-boot-devtools:${SPRING_BOOT_VERSION}"
    annotationProcessor "org.springframework:spring-context-indexer:6.1.1"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${SPRING_BOOT_VERSION}"
    testImplementation "junit:junit:4.13"
}

springBoot {
    mainClass = 'uk.me.jeremygreen.springexperiments.SpringExperimentsApplication'
}

publishing {
    publications {
        bootJava(MavenPublication) {
            artifact bootJar
        }
    }
    repositories {
        maven {
            name 'aws-experiments'
            authentication {
                awsIm(AwsImAuthentication)
            }
            url "s3://aws-experiments.s3-eu-west-1.amazonaws.com/artifacts"
        }
    }
}

if (hasProperty('buildScan')) {
    gradleEnterprise {
        buildScan {
            termsOfServiceUrl = "https://gradle.com/terms-of-service"
            termsOfServiceAgree = "yes"
        }
    }
}

// Add React frontend artifacts to the jar.
bootJar.dependsOn('src:frontend:npm_run_build')
bootJar {
    from("${project('src:frontend').projectDir}/build") {
	into("public")
    }
}

test.dependsOn('src:frontend:npm_run_ci')
